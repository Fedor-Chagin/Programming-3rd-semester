import os

def comprehensive_test():
    """–ü–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç—ã —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –ø–∞—Ä"""
    test_cases = [
        # –í–µ—Ä–Ω—ã–µ —Ç–µ—Å—Ç—ã (–¥–æ–ª–∂–Ω—ã –ø—Ä–æ—Ö–æ–¥–∏—Ç—å ‚úÖ)
        ("2 7 11 15", "9", "0 1", True),
        ("3 2 4", "6", "1 2", True),
        ("3 3", "6", "0 1", True),
        ("1 2 3 4 5 6", "7", "0 5\n1 4\n2 3", True),  # –í–°–ï –ø–∞—Ä—ã!
        ("-1 10 2 5", "9", "0 1", True),    # -1+10=9
        
        # –ù–µ–≤–µ—Ä–Ω—ã–µ —Ç–µ—Å—Ç—ã (–¥–æ–ª–∂–Ω—ã –ù–ï –ø—Ä–æ—Ö–æ–¥–∏—Ç—å ‚ùå)
        ("2 7 11 15", "9", "1 2", False),   # –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã
        ("3 2 4", "6", "0 1", False),       # –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 1 2, –∞ –Ω–µ 0 1
        ("3 3", "6", "1 0", False),         # –∏–Ω–¥–µ–∫—Å—ã –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        ("1 2 3", "10", "0 1", False),      # –Ω–µ—Ç –ø–∞—Ä, –Ω–æ –æ–∂–∏–¥–∞–µ–º –≤—ã–≤–æ–¥
        ("4 5 6", "9", "", False),          # 4+5=9, –Ω–æ –æ–∂–∏–¥–∞–µ–º –ø—É—Å—Ç–æ–π –≤—ã–≤–æ–¥
        ("1 2 3 4 5 6", "7", "0 5", False), # –æ–∂–∏–¥–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é –ø–∞—Ä—É, –Ω–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ
    ]
    
    print("~ –ü–û–õ–ù–´–ô –¢–ï–°–¢–ò–ù–ì: –≤–µ—Ä–Ω—ã–µ –∏ –Ω–µ–≤–µ—Ä–Ω—ã–µ —Ç–µ—Å—Ç—ã ~")
    print("=" * 50)
    
    passed = 0
    failed = 0
    
    for nums, target, expected, should_pass in test_cases:
        print(f"\n –¢–µ—Å—Ç: nums={nums}, target={target}")
        print(f"–û–∂–∏–¥–∞–µ–º: '{expected}' ({'—Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞—Å—Ç—å' if should_pass else '—Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞—Å—Ç—å'})")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        with open("input.txt", "w") as f:
            f.write(nums + "\n")
            f.write(target + "\n")
        
        # –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
        output = os.popen('python3 ‚Ññ1.py < input.txt').read().strip()
        
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç:  '{output}'")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–∂–∏–¥–∞–Ω–∏—é
        result_matches = (output == expected)
        
        # –¢–µ—Å—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç –µ—Å–ª–∏:
        # - should_pass=True –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–≤–ø–∞–¥–∞–µ—Ç, –ò–õ–ò
        # - should_pass=False –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ù–ï —Å–æ–≤–ø–∞–¥–∞–µ—Ç
        test_passed = (should_pass and result_matches) or (not should_pass and not result_matches)
        
        if test_passed:
            print("‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù")
            passed += 1
        else:
            print("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù. –û–®–ò–ë–ö–ê")
            failed += 1
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        os.remove("input.txt")
    
    print("\n" + "=" * 50)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢: {passed} –ø—Ä–æ–π–¥–µ–Ω–æ, {failed} –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ")
    if failed == 0:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
    else:
        print(" –ï—Å—Ç—å –æ—à–∏–±–∫–∏!")

if __name__ == "__main__":
    comprehensive_test()